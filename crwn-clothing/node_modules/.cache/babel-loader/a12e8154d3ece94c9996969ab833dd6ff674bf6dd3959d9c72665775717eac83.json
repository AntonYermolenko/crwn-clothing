{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { onAuthStateChanged, getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAXTlGx0e3afcyTr6gIr2WzJ8L6PALR4xw\",\n  authDomain: \"crwn-clothing-db-bb352.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-bb352\",\n  storageBucket: \"crwn-clothing-db-bb352.appspot.com\",\n  messagingSenderId: \"755448336992\",\n  appId: \"1:755448336992:web:7b10ea41190a35b4942905\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log(\"done\");\n};\nexport const getCategoiresAndDocuemnts = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => docSnapshot.data());\n};\nexport const db = getFirestore();\nexport async function createUserDocumentFromAuth(userAuth, additionalInformation = {}) {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error);\n    }\n  }\n  return userSnapshot;\n}\nexport async function createAuthUserWithEmailAndPassword(email, password) {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n}\nexport async function signInAuthUserWithEmailAndPassword(email, password) {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n}\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => {\n  onAuthStateChanged(auth, callback);\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = onAuthStateChanged(auth, userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};","map":{"version":3,"names":["initializeApp","onAuthStateChanged","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","db","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoiresAndDocuemnts","q","querySnapshot","docs","map","docSnapshot","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback","getCurrentUser","Promise","resolve","reject","unsubscribe"],"sources":["C:/Users/Anton/Desktop/capstone-project/crwn-clothing/crwn-clothing/src/utils/firebase/firebase.utils.ts"],"sourcesContent":["import {initializeApp} from 'firebase/app';\r\nimport { NextOrObserver,User,onAuthStateChanged, getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider,createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut} from 'firebase/auth';\r\nimport { QueryDocumentSnapshot,getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs} from 'firebase/firestore'\r\nimport { Category } from '../../store/categories/category.types';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAXTlGx0e3afcyTr6gIr2WzJ8L6PALR4xw\",\r\n    authDomain: \"crwn-clothing-db-bb352.firebaseapp.com\",\r\n    projectId: \"crwn-clothing-db-bb352\",\r\n    storageBucket: \"crwn-clothing-db-bb352.appspot.com\",\r\n    messagingSenderId: \"755448336992\",\r\n    appId: \"1:755448336992:web:7b10ea41190a35b4942905\" \r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst googleProvider = new GoogleAuthProvider();\r\n\r\ngoogleProvider.setCustomParameters({\r\n    prompt: \"select_account\"\r\n});\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\r\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\r\n\r\nexport type ObjectToAdd = {\r\n    title: string;\r\n\r\n}\r\n\r\nexport const addCollectionAndDocuments = async <T extends ObjectToAdd>(collectionKey: string, objectsToAdd: T[]): Promise<void> => {\r\n    const collectionRef = collection(db, collectionKey);\r\n    const batch = writeBatch(db);\r\n    objectsToAdd.forEach((object) => {\r\n        const docRef = doc(collectionRef, object.title.toLowerCase());\r\n        batch.set(docRef, object);\r\n    });\r\n    await batch.commit();\r\n    console.log(\"done\");\r\n} \r\n\r\n\r\n\r\nexport const getCategoiresAndDocuemnts = async (): Promise<Category[]> => {\r\n    const collectionRef = collection(db, 'categories');\r\n    const q = query(collectionRef);\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map((docSnapshot) => docSnapshot.data() as Category);\r\n\r\n};\r\n\r\nexport const db = getFirestore();\r\n\r\nexport type AdditionalInformation={\r\n    displayName?: string\r\n}\r\n\r\nexport type UserData = {\r\n    createAt: Date,\r\n    dsiplayName: string,\r\n    email: string,\r\n}\r\n\r\nexport async function createUserDocumentFromAuth(userAuth: User, additionalInformation = {} as AdditionalInformation): Promise<void | QueryDocumentSnapshot<UserData>>{\r\n    if(!userAuth) return;\r\n    const userDocRef = doc(db, 'users', userAuth.uid);\r\n    const userSnapshot = await getDoc(userDocRef);\r\n    if(!userSnapshot.exists()){\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n        try{\r\n           await setDoc(userDocRef, {\r\n            displayName,\r\n            email,\r\n            createdAt,\r\n            ...additionalInformation\r\n           }) \r\n        }catch (error){\r\n            console.log('error creating the user', error);\r\n        }\r\n\r\n    }\r\n\r\n    return userSnapshot as QueryDocumentSnapshot<UserData>;\r\n}\r\n\r\n\r\n\r\nexport async function createAuthUserWithEmailAndPassword(email: string, password: string){\r\n    if(!email || !password) return;\r\n    return await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n}\r\n\r\nexport async function signInAuthUserWithEmailAndPassword (email: string, password: string){\r\n    if(!email || !password) return;\r\n    return await signInWithEmailAndPassword(auth , email, password);\r\n}\r\n\r\nexport const signOutUser = async() => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback: NextOrObserver<User>) =>{\r\n    onAuthStateChanged(auth, callback);\r\n\r\n}\r\n\r\nexport const getCurrentUser = (): Promise<User | null> => {\r\n    return new Promise((resolve, reject) =>{\r\n        const unsubscribe = onAuthStateChanged(\r\n            auth, \r\n            (userAuth) => {\r\n                unsubscribe();\r\n                resolve(userAuth);\r\n            },\r\n            reject\r\n        )\r\n    })\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}