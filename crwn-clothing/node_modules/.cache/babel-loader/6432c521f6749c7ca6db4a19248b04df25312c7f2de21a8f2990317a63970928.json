{"ast":null,"code":"import { rootReducer } from './root-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport persistStore from 'redux-persist/es/persistStore';\nimport persistReducer from 'redux-persist/es/persistReducer';\nimport storage from 'redux-persist/lib/storage';\nimport { rootSaga } from './root-saga';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: [logger, sagaMiddleware]\n});\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"names":["rootReducer","configureStore","persistStore","persistReducer","storage","rootSaga","createSagaMiddleware","logger","persistConfig","key","whitelist","sagaMiddleware","persistedReducer","store","reducer","middleware","run","persistor"],"sources":["C:/Users/Anton/Desktop/capstone-project/crwn-clothing/crwn-clothing/src/store/store.ts"],"sourcesContent":["import { rootReducer } from './root-reducer';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport persistStore from 'redux-persist/es/persistStore';\r\nimport persistReducer from 'redux-persist/es/persistReducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { rootSaga } from './root-saga';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { PersistConfig } from 'redux-persist';\r\nimport logger from 'redux-logger';\r\n\r\n\r\n\r\n\r\nexport type Rootstate = ReturnType<typeof rootReducer> \r\n\r\ntype ExtendedPersistCofnig = PersistConfig<Rootstate> & {\r\n    whitelist: (keyof Rootstate)[]\r\n}\r\n\r\nconst persistConfig:ExtendedPersistCofnig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['cart']\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n \r\nexport const store = configureStore({\r\n    reducer:persistedReducer,\r\n    middleware: [logger, sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);"],"mappings":"AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,MAAM,MAAM,cAAc;AAWjC,MAAMC,aAAmC,GAAG;EACxCC,GAAG,EAAE,MAAM;EACXL,OAAO;EACPM,SAAS,EAAE,CAAC,MAAM;AACtB,CAAC;AAED,MAAMC,cAAc,GAAGL,oBAAoB,CAAC,CAAC;AAE7C,MAAMM,gBAAgB,GAAGT,cAAc,CAACK,aAAa,EAAER,WAAW,CAAC;AAEnE,OAAO,MAAMa,KAAK,GAAGZ,cAAc,CAAC;EAChCa,OAAO,EAACF,gBAAgB;EACxBG,UAAU,EAAE,CAACR,MAAM,EAAEI,cAAc;AACvC,CAAC,CAAC;AAEFA,cAAc,CAACK,GAAG,CAACX,QAAQ,CAAC;AAE5B,OAAO,MAAMY,SAAS,GAAGf,YAAY,CAACW,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}