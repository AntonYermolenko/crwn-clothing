{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\Desktop\\\\capstone-project\\\\crwn-clothing\\\\crwn-clothing\\\\src\\\\components\\\\button\\\\button.component.tsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton } from './button.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let BUTTON_TYPE_CLASSES = /*#__PURE__*/function (BUTTON_TYPE_CLASSES) {\n  BUTTON_TYPE_CLASSES[\"base\"] = \"base\";\n  BUTTON_TYPE_CLASSES[\"google\"] = \"google-sign-in\";\n  BUTTON_TYPE_CLASSES[\"inverted\"] = \"inverted\";\n  return BUTTON_TYPE_CLASSES;\n}({});\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => ({\n  [BUTTON_TYPE_CLASSES.base]: BaseButton,\n  [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n  [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n})[buttonType];\nconst Button = ({\n  children,\n  buttonType,\n  isLoading,\n  ...otherProps\n}) => {\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","jsxDEV","_jsxDEV","BUTTON_TYPE_CLASSES","getButton","buttonType","base","google","inverted","Button","children","isLoading","otherProps","CustomButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Anton/Desktop/capstone-project/crwn-clothing/crwn-clothing/src/components/button/button.component.tsx"],"sourcesContent":["import {BaseButton,GoogleSignInButton,InvertedButton} from './button.styles'\r\nimport { FC,ButtonHTMLAttributes } from 'react';\r\n\r\nexport enum BUTTON_TYPE_CLASSES {\r\n    base = 'base',\r\n    google = \"google-sign-in\",\r\n    inverted = \"inverted\",\r\n}\r\n\r\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseButton => (\r\n    {\r\n        [BUTTON_TYPE_CLASSES.base] : BaseButton, \r\n        [BUTTON_TYPE_CLASSES.google] : GoogleSignInButton, \r\n        [BUTTON_TYPE_CLASSES.inverted] : InvertedButton, \r\n\r\n    }[buttonType]);\r\n\r\nexport type ButtonProps  = {\r\n    buttonType?: BUTTON_TYPE_CLASSES;\r\n    isLoading?: boolean;\r\n}& ButtonHTMLAttributes<HTMLButtonElement>\r\n\r\nconst Button: FC<ButtonProps> = ({children, buttonType, isLoading, ...otherProps}) => {\r\n    const CustomButton = getButton(buttonType);\r\n    return(\r\n        <CustomButton {...otherProps}>\r\n            {children}\r\n        </CustomButton>\r\n    );\r\n}\r\n\r\nexport default Button;"],"mappings":";AAAA,SAAQA,UAAU,EAACC,kBAAkB,EAACC,cAAc,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG5E,WAAYC,mBAAmB,0BAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAA,OAAnBA,mBAAmB;AAAA;AAM/B,MAAMC,SAAS,GAAGA,CAACC,UAAU,GAAGF,mBAAmB,CAACG,IAAI,KACpD;EACI,CAACH,mBAAmB,CAACG,IAAI,GAAIR,UAAU;EACvC,CAACK,mBAAmB,CAACI,MAAM,GAAIR,kBAAkB;EACjD,CAACI,mBAAmB,CAACK,QAAQ,GAAIR;AAErC,CAAC,EAACK,UAAU,CAAE;AAOlB,MAAMI,MAAuB,GAAGA,CAAC;EAACC,QAAQ;EAAEL,UAAU;EAAEM,SAAS;EAAE,GAAGC;AAAU,CAAC,KAAK;EAClF,MAAMC,YAAY,GAAGT,SAAS,CAACC,UAAU,CAAC;EAC1C,oBACIH,OAAA,CAACW,YAAY;IAAA,GAAKD,UAAU;IAAAF,QAAA,EACvBA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEvB,CAAC;AAAAC,EAAA,GAPKT,MAAuB;AAS7B,eAAeA,MAAM;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}