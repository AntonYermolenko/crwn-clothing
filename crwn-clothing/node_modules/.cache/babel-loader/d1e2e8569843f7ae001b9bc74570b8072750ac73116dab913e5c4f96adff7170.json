{"ast":null,"code":"import { all as _all } from \"redux-saga/effects\";\nimport { call as _call } from \"redux-saga/effects\";\nimport { put as _put } from \"redux-saga/effects\";\nimport { takeLatest as _takeLatest } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from './user.types';\nimport { signInSuccess, signInFailed, signUpSuccess, signUpFailed, signOutSuccess, signOutFailed } from './user.action';\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInAuthUserWithEmailAndPassword, createAuthUserWithEmailAndPassword, signOutUser } from '../../utils/firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield _call(createUserDocumentFromAuth, userAuth, additionalDetails);\n    if (userSnapshot) {\n      yield _put(signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n      }));\n    }\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield _call(getCurrentUser);\n    if (!userAuth) return;\n    yield _call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield _call(signOutUser);\n    yield _put(signOutSuccess());\n  } catch (error) {\n    yield _put(signOutFailed(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield _call(signInWithGooglePopup);\n    yield _call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const userCredential = yield _call(signInAuthUserWithEmailAndPassword, email, password);\n    if (userCredential) {\n      const {\n        user\n      } = userCredential;\n      yield _call(getSnapshotFromUserAuth, user);\n    }\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const userCredential = yield _call(createAuthUserWithEmailAndPassword, email, password);\n    if (userCredential) {\n      const {\n        user\n      } = userCredential;\n      yield _put(signUpSuccess(user, {\n        displayName\n      }));\n    }\n  } catch (error) {\n    yield _put(signUpFailed(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalDetails\n  }\n}) {\n  yield _call(getSnapshotFromUserAuth, user, additionalDetails);\n}\nexport function* onGoogleSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* OnEmailSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n_c = OnEmailSignInStart;\nexport function* onCheckUserSession() {\n  yield _takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignUpStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignOutStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield _all([_call(onCheckUserSession), _call(onGoogleSignInStart), _call(OnEmailSignInStart), _call(onSignUpStart), _call(onSignOutStart)]);\n}\nvar _c;\n$RefreshReg$(_c, \"OnEmailSignInStart\");","map":{"version":3,"names":["USER_ACTION_TYPES","signInSuccess","signInFailed","signUpSuccess","signUpFailed","signOutSuccess","signOutFailed","getCurrentUser","createUserDocumentFromAuth","signInWithGooglePopup","signInAuthUserWithEmailAndPassword","createAuthUserWithEmailAndPassword","signOutUser","getSnapshotFromUserAuth","userAuth","additionalDetails","userSnapshot","call","put","id","data","error","isUserAuthenticated","signOut","signInWithGoogle","user","signInWithEmail","payload","email","password","userCredential","signUp","displayName","signInAfterSignUp","onGoogleSignInStart","takeLatest","GOOGLE_SIGN_IN_START","OnEmailSignInStart","EMAIL_SIGN_IN_START","_c","onCheckUserSession","CHECK_USER_SESSION","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onSignOutStart","SIGN_OUT_START","userSagas","all","$RefreshReg$"],"sources":["C:/Users/Anton/Desktop/capstone-project/crwn-clothing/crwn-clothing/src/store/user/user.saga.ts"],"sourcesContent":["import {takeLatest, put, call, all} from 'typed-redux-saga/macro';\r\nimport { USER_ACTION_TYPES } from './user.types';\r\nimport { signInSuccess, signInFailed, signUpSuccess, signUpFailed, signOutSuccess, signOutFailed,EmailSignInStart,SignUpStart,SignUpSuccess } from './user.action';\r\nimport {getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInAuthUserWithEmailAndPassword, createAuthUserWithEmailAndPassword, signOutUser, AdditionalInformation} from '../../utils/firebase/firebase.utils';\r\nimport { User } from 'firebase/auth';\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth: User, additionalDetails?: AdditionalInformation) {\r\n    try{\r\n        const userSnapshot = yield* call(createUserDocumentFromAuth, userAuth, additionalDetails);\r\n        if (userSnapshot){\r\n            yield* put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()} ))\r\n        }\r\n    }catch(error){\r\n        yield* put(signInFailed(error as Error));\r\n    }\r\n};\r\n\r\n\r\nexport function* isUserAuthenticated() {\r\n    try{\r\n        const userAuth = yield* call(getCurrentUser);\r\n        if(!userAuth) return;\r\n        yield* call(getSnapshotFromUserAuth, userAuth);\r\n\r\n    }catch(error){\r\n        yield* put(signInFailed(error as Error ));\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try{\r\n        yield* call(signOutUser);\r\n        yield* put(signOutSuccess());   \r\n    }catch(error){\r\n        yield* put(signOutFailed(error  as Error ));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try{\r\n        const { user } = yield* call(signInWithGooglePopup);\r\n        yield* call(getSnapshotFromUserAuth, user);\r\n    }catch(error){\r\n        yield* put(signInFailed(error  as Error ));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail ({payload: {email, password}}: EmailSignInStart) {\r\n    try{\r\n        const userCredential  = yield* call(signInAuthUserWithEmailAndPassword,email,password);\r\n        if (userCredential){\r\n            const {user} = userCredential;\r\n            yield* call(getSnapshotFromUserAuth, user);\r\n        }\r\n\r\n    }catch(error){\r\n        yield* put(signInFailed(error  as Error));\r\n    }\r\n}\r\n\r\nexport function* signUp ({payload : { email, password, displayName }}:SignUpStart){\r\n    try{\r\n        const userCredential = yield* call(createAuthUserWithEmailAndPassword, email, password);\r\n        if(userCredential){\r\n            const { user }  = userCredential;\r\n            yield* put(signUpSuccess(user, {displayName}));\r\n        }\r\n    }catch(error){\r\n        yield* put(signUpFailed(error as Error));\r\n    }\r\n}\r\n\r\nexport function* signInAfterSignUp ({payload: {user,additionalDetails}}:SignUpSuccess) {\r\n    yield* call(getSnapshotFromUserAuth, user, additionalDetails)\r\n\r\n}\r\n\r\nexport function* onGoogleSignInStart () {\r\n    yield* takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* OnEmailSignInStart() {\r\n    yield* takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail );\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield* takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated );\r\n}\r\n\r\nexport function* onSignUpStart () {\r\n    yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n    yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp)\r\n}\r\n \r\nexport function* onSignOutStart() {\r\n    yield* takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\r\n}\r\n\r\n\r\n\r\nexport function* userSagas() {\r\n    yield* all([\r\n        call(onCheckUserSession), \r\n        call(onGoogleSignInStart),\r\n        call(OnEmailSignInStart), \r\n        call(onSignUpStart),\r\n        call(onSignOutStart),\r\n    ])\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}